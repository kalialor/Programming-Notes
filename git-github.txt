What is Git? 
    git is a verision control system. a fancy way of saying it tracks your changes.




Repositories-a repo is a collection of commits, each of which is an archive of what the project's
             working tree looked like at a past date, whether on your machine or someone else's. 
             a container for a project that is tracked by git. 


    2 types of repos:

        -local-an isolated repo stored on your own computer, where you can work on the local 
                verison of your project

        -remote repo-generally stored outside of your isolated local system, usually on a remote
                     server. it is especially useful when working in teams. 
                     this is the place where you can share your project's code, see other people's
                    code and integrate it into your local version of the project, also push 
                    your changes to the remote repo.





Git init-initializes changes of a file or project

         use    ls -a     and the .git file should show up


        to create a new repo and start tracking your project with git. this folder
        is where git stores all internal tracking data for the current repo.






Git add-adds files ready to be committed. from the project folder, we can use git add command 
        to add our files to the staging area, which allows them to be tracked. 

        example: git add file.js

        
        if you want to add all the files inside of the project folder to the staging area:
                git add . 







Git status-view commits





commit-a checkpoint. committing is the process in which the changes are offically added to the git
       repo. 
       in git, we can consider commits to be checkpoints, or snapshots of your project at its current
       state. In other words, we basically save the current version of our code in a commit. We can 
       create as many commits as we need in the commit history, and we can go back and forth between 
       commits to see the different revisions of our project's code. That allows use to efficiently 
       manage our progress and track the project as it gets developed. 

       commits are usually created at logical points as we develop our project, usually after adding in
       the specific contents, features, or modifications (like new functionalities or bug fixes, for 
       example)

       ****before we can commit our code, we need to place it in the staging area. 








Git push command: 


the git push command takes two arguments: 
    -a remote name, for example origin
    -a branch name, for example main

       ex:     git push remote-name branch-name

                git push origin main      common for pushing from local to remote repo








Renaming branches

To rename a branch, you'd use the same git push command, but you would add one more 
argument: the name of the new branch. For example: 
            git push remote-name local-branch-name: remote-branch-name

            This pushes the local-branch-name to your remote-name, but it is renamed to 
            remote-branch-name


            