node_modules carry all your dependecies
     -we do not share this, because it is so heavy
    -make sure to put this in the .gitignore file




public is everything that is visible to everyone


src folder carries all of the source code




React is a single-page app meaning, only one index.html






React is a JavaScript library for building user interfaces
        The competition is Angular & Vue


React will separate the page into individual components and update what needs to be updated. So instead of refreshing the entire page, when making one small change, you'll only refresh the one component. 






JXS-a syntax extension to JavaScript. We recommend using it with React to describe what the UI should look like. JSX may remind you of a template language, but it comes with the full power of JavaScript. JSX produces React "elements" 


React doesn't require using JSX, but most people find in helpful as a visual aid when working with UI inside the Javascript code. 


example of JSX: 
        In the example below, we declare a variable called name and then use it inside JSX by wrapping it in curly braces:

        const name = 'Josh Perez';
        const element = <h1>Hello, {name}</h1>;


You can put any valid JavaScript expression inside the curly braces in JSX. For example, 2 + 2, user.firstName, or formatName(user) are all valid JavaScript expressions.















Rendering Elements
    Elements are the smallest building blocks of React apps. 
    An element describes what you wnat to see on the screen. 

    ex:  const element = <h1>Hello, world</h1>





To render a React element, first pass the DOM element to ReactDOM.createRoot(), then pass the React element to root.render()

                HTML: 
                <div id="root">
                        </div>



                JS:

                const root = ReactDOM.createRoot(
                    document.getElementbyId('root')
            );
                const element = <h1>Hello, world</h1>
                root.render(element);







Updating the Rendered Element
        React elements are immutabe. Once, you create an element, you can't change its children or attributes. An elment is like a single frame in a movie: it represents the UI at a certain point in time. 

        






























